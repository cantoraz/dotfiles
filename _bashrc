# vim:ft=sh

# detect version control system and its branch
# used in PS1
function detect_vcs {
  b=$(git branch 2>/dev/null | sed -e "/^ /d" -e "s/* \(.*\)/\1/")

  if [ x"$b" != "x" ]; then s="git"
  elif [ -e .svn ]; then s="svn"
  elif [ -e .bzr ]; then s="bzr"
  elif [ -e .hg ]; then s="hg"
  fi

  case $s in
    git) sb=$s:$b;;
    *) sb=$s;;
  esac

  echo $sb
}

# Colored prompt
PS1='\
`a=$?; [[ $a -ne 0 ]] && echo -n "\[\033[07;31;47m\]-$a-\[\033[00m\]";`\
${RUBY_VERSION:+\[\033[31m\]($(rvm-prompt))\[\033[00m\]}\
`[[ "$SHELL" = "$HOME/Gentoo/bin/bash" ]] && echo -n "\[\033[35m\](gentoo-prefix)\[\033[00m\]";`\
\[\033[01;35m\]\u\[\033[01;30m\]@\[\033[01;34m\]\h\[\033[01;30m\]:\[\033[01;34m\]\w\
`b=$(detect_vcs); echo -n ${b:+\[\033[33m\]($b)\[\033[00m\]};`\
\[\033[01;32m\]\n\$ \[\033[00m\]\
'

# Alias definitions.
if [ -f "$HOME/.bash_aliases" ]; then
  . "$HOME/.bash_aliases"
fi

# Exclude ._ (dot underscore) files while coping or taring under Mac OS X
export COPYFILE_DISABLE=true

# Xcode 4 has removed support for -arch ppc, but Python2.6 on Mac OS X 10.6
# expects to build with all three architectures.
#export ARCHFLAGS='-arch i386 -arch x86_64'

# MySQL (Official Installation) library path for some compiling
# export DYLD_LIBRARY_PATH=/usr/local/mysql/lib:$DYLD_LIBRARY_PATH

# Node.js installed by HomeBrew suggest
if [ -d "/usr/local/lib/node_modules" ]; then
  export NODE_PATH="/usr/local/lib/node_modules"
fi

# bash completion support installed by HomeBrew.
if [ -f `brew --prefix`/etc/bash_completion ]; then
  source `brew --prefix`/etc/bash_completion
fi

# Use VIM as default editor for console utilities
export EDITOR=vim

# Virtualenvwrapper
# export WORKON_HOME=$HOME/.virtualenvs
# case "$SHELL" in
#   '/bin/bash')
#     . "/usr/local/bin/virtualenvwrapper.sh"
#     ;;
#   "$HOME/Gentoo/bin/bash")
#     . "$HOME/Gentoo/usr/bin/virtualenvwrapper.sh"
#     ;;
# esac

# Load Simple Python Version Management (pyenv) into shell
# to enable shims and autocompletion
if which pyenv > /dev/null; then eval "$(pyenv init -)"; fi

# Load RVM into a shell session *as a function*
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"

# Load GVM
#THIS MUST BE AT THE END OF THE FILE FOR GVM TO WORK!!!
[[ -s "$HOME/.gvm/bin/gvm-init.sh" ]] && source "$HOME/.gvm/bin/gvm-init.sh"

# Load selected bash-compatible zsh conf from YADR
# [[ -f "$HOME/.bash_yadr" ]] && source "$HOME/.bash_yadr"

DOTFILES=$HOME/dotfiles
# Load extra customization
if [[ -d "$DOTFILES/bash" ]]; then
  if [[ "$(ls -A $DOTFILES/bash)" ]]; then
    for bash_config in $DOTFILES/bash/*.sh; do
      source $bash_config
    done
  fi
fi

# if [[ -d "$HOME/Applications/rsense-0.3" ]]; then
#   export RSENSE_HOME=$HOME/Applications/rsense-0.3
# fi

# Add byobu prefix
command -v brew >/dev/null 2>&1
[[ $? -eq 0 ]] && export BYOBU_PREFIX=$(brew --prefix)
